# Generated by Django 3.0.8 on 2020-08-20 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='inrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=200)),
                ('National_ID', models.CharField(max_length=14, unique=True)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=300, null=True)),
                ('Comorbidities', models.CharField(blank=True, choices=[('No Comorbidities', 'No Comorbidities'), ('Cardiac', 'Cardiac'), ('Chest', 'Chest'), ('Renal', 'Renal'), ('Other', 'Other')], max_length=50, null=True)),
                ('Cause_of_Liver_Cirrhosis', models.CharField(blank=True, choices=[('HCV', 'HCV'), ('HBV', 'HBV'), ('Other Cuses', 'Other Cuses')], max_length=20, null=True)),
                ('HCV_Treatmen_If_not_Pick_Na', models.CharField(blank=True, choices=[('SOF/DAC', 'SOF/DAC'), ('SOF/DAC/RBV', 'SOF/DAC/RBV'), ('PAR/OMB', 'PAR/OMB'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('SOF/DAC/SIM', 'SOF/DAC/SIM'), ('SOF/PAR/OMB/RBV', 'SOF/PAR/OMB/RBV'), ('SOF/LED', 'SOF/LED'), ('IFN/RBV', 'IFN/RBV'), ('SOF/INF/RBV', 'SOF/INF/RBV'), ('SOF/RBV', 'SOF/RBV'), ('SOF/SIM', 'SOF/SIM'), ('SOF/DAC/SIM/RBV', 'SOF/DAC/SIM/RBV'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('In_case_OF_HCV_OutCome', models.CharField(blank=True, choices=[('Responder', 'Responder'), ('Relapser', 'Relapser'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Center_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_num', models.IntegerField()),
                ('AFP', models.DecimalField(decimal_places=1, max_digits=4, null=True)),
                ('Presence_of_Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=20, null=True)),
                ('Presence_of_Focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=20, null=True)),
                ('Performance_Status_In_Presence_of_Focal_Lesions', models.CharField(blank=True, max_length=200, null=True)),
                ('Fib4', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('Child_Score', models.CharField(blank=True, choices=[('A5', 'A5'), ('A6', 'A6'), ('B7', 'B7'), ('B8', 'B8'), ('B9', 'B9'), ('C', 'C')], max_length=12, null=True)),
                ('HCC_Confirmed_by_Triphasic_CT_MRI', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=20, null=True)),
                ('Method_of_HCC_Confirmation', models.CharField(blank=True, choices=[('Triphasic CT', 'Triphasic CT'), ('MRI', 'MRI')], max_length=20, null=True)),
                ('Number_of_focal_lesions', models.IntegerField(blank=True, null=True)),
                ('Site_Segment', models.IntegerField(blank=True, null=True)),
                ('Size_In_case_of_Multiple_lesions_mention_the_largest', models.CharField(blank=True, max_length=50, null=True)),
                ('Attach_CT_Report_and_CT_Images_If_possible', models.FileField(blank=True, null=True, upload_to='report')),
                ('Period_between_HCV_Cure_HCC_in_Months', models.IntegerField(blank=True, null=True)),
                ('Hemoglobin', models.IntegerField(blank=True, null=True)),
                ('Platelet_count', models.IntegerField(blank=True, null=True)),
                ('WBCx103mm3', models.IntegerField(blank=True, null=True)),
                ('INR', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('Total_BILIRUBIN_mgdL', models.IntegerField(blank=True, null=True)),
                ('Albumin_gdL', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('AST_IUL', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('ALT_IUL', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('Creatinine', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('date_of_the_last_dose', models.DateField(blank=True, null=True)),
                ('Fup_befor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=20, null=True)),
                ('create_on', models.DateField(auto_now_add=True)),
                ('inrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='LiverFup.inrollment')),
            ],
            options={
                'unique_together': {('inrollment_id', 'visit_num')},
            },
        ),
    ]
