# Generated by Django 3.0.8 on 2020-08-20 17:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('Patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('National_ID', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=300, null=True)),
                ('Age', models.IntegerField(null=True)),
                ('Portal_number', models.CharField(blank=True, max_length=20, null=True)),
                ('Cohort', models.CharField(blank=True, max_length=200, null=True)),
                ('PCR_Date', models.DateField(blank=True, null=True)),
                ('PhysicianName', models.CharField(blank=True, max_length=200, null=True)),
                ('year_of_HCV_positivity', models.DateField(blank=True, null=True)),
                ('Circumstances_of_referral', models.CharField(blank=True, choices=[('تحويل قوافل', 'تحويل قوافل'), ('موقع الحجز', 'موقع الحجز'), ('موقع الحجز', 'موقع الحجز'), ('مستشفات', 'مستشفات'), ('مبادرة المسح', 'مبادرة المسح'), ('طلبة', 'طلبة'), ('سجون', 'سجون'), ('راغبى السفر', 'راغبى السفر'), ('مسح ميدانى', 'مسح ميدانى'), ('Routine Check-up', 'Routine Check-up'), ('Blood donation', 'Blood donation'), ('Mass campaign', 'Mass campaign'), ('Known risk factors', 'Known risk factors'), ('Unknown', 'Unknown')], max_length=300, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('District_Town', models.CharField(blank=True, max_length=200, null=True)),
                ('Home_tel', models.CharField(blank=True, max_length=200, null=True)),
                ('Mobile_1', models.CharField(blank=True, max_length=200, null=True)),
                ('Mobile_2', models.CharField(blank=True, max_length=200, null=True)),
                ('Treatment_Status', models.CharField(choices=[('Treatment Naive', 'Treatment Naive'), ('Treatment Experienced', 'Treatment Experienced')], max_length=200, null=True)),
                ('Which_kind_of_Treatment', models.CharField(blank=True, choices=[('Other', 'Other'), ('Old Interferon Protocol', 'Old Interferon Protocol'), ('Roche', 'Roche'), ('SOF/RBV', 'SOF/RBV'), ('INF/SOF/RBV', 'INF/SOF/RBV'), ('SOF/DAC', 'SOF/DAC'), ('SOF/DAC/RBV', 'SOF/DAC/RBV'), ('SIM/SOF', 'SIM/SOF'), ('SOF/SIM/DAC/RBV', 'SOF/SIM/DAC/RBV'), ('SOF/SIM/DAC', 'SOF/SIM/DAC'), ('PAR/OMB', 'PAR/OMB'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('INF/RBV', 'INFRBV'), ('SOF/PAR/OMP', 'SOF/PAR/OMP'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('SOF/PAR/OMB/RBV', 'SOF/PAR/OMB/RBV')], max_length=200, null=True)),
                ('Which_kind_of_Treatment_2', models.CharField(blank=True, choices=[('Other', 'Other'), ('Old Interferon Protocol', 'Old Interferon Protocol'), ('Roche', 'Roche'), ('SOF/RBV', 'SOF/RBV'), ('INF/SOF/RBV', 'INF/SOF/RBV'), ('SOF/DAC', 'SOF/DAC'), ('SOF/DAC/RBV', 'SOF/DAC/RBV'), ('SIM/SOF', 'SIM/SOF'), ('SOF/SIM/DAC/RBV', 'SOF/SIM/DAC/RBV'), ('SOF/SIM/DAC', 'SOF/SIM/DAC'), ('PAR/OMB', 'PAR/OMB'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('INF/RBV', 'INFRBV'), ('SOF/PAR/OMP', 'SOF/PAR/OMP'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('SOF/PAR/OMB/RBV', 'SOF/PAR/OMB/RBV')], max_length=200, null=True)),
                ('Other_Kind_of_Treatment', models.CharField(blank=True, max_length=200, null=True)),
                ('Previous_treatment_last_injection_date', models.DateField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('Height_m', models.FloatField(blank=True, max_length=200, null=True)),
                ('BMI', models.FloatField(blank=True, max_length=200, null=True)),
                ('Tobacco_Consumption', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Alcohol_intake', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Former_Or_Ongoing_IV_Drug_User', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Blood_Pressure_Systolic_mmHg', models.IntegerField(blank=True, null=True)),
                ('Blood_Pressure_Diastolic_mmHg', models.IntegerField(blank=True, null=True)),
                ('hypertensions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Diabetes', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('DM_Treatment', models.CharField(blank=True, choices=[('Only Diet', 'Only Diet'), ('Oral', 'Oral'), ('Insulin', 'Insulin'), ('Both', 'Both')], max_length=200, null=True)),
                ('Known_to_be_cirrhotic', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Hepatic_Encephalopathy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Spicial_Situation', models.CharField(blank=True, choices=[('On Dailysis', 'On Dailysis'), ('Post-Transplant', 'Post-Transplant'), ('Post-Chemotherapy', 'Post-Chemotherapy'), ('Autoimmune Disease', 'Autoimmune Disease'), ('Post-Transplant Kidney', 'Post-Transplant Kidney'), ('Post-Transplant Liver', 'Post-Transplant Liver'), ('Extrahepatic', 'Extrahepatic'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicial_Situation_Other', models.CharField(blank=True, max_length=200, null=True)),
                ('HCC', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('If_proVen_HCC', models.CharField(blank=True, choices=[('Regional Therapy', 'Regional Therapy'), ('Treated', 'Treated'), ('Not Treated', 'Not Treated')], max_length=200, null=True)),
                ('if_Treated_Specify_HCC', models.CharField(blank=True, max_length=500, null=True)),
                ('Current_intake_of_other_medication', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Drug_Name_1', models.CharField(blank=True, max_length=300, null=True)),
                ('Start_Date_of_Medication_1', models.DateField(blank=True, null=True)),
                ('Duration_Month_1', models.IntegerField(blank=True, null=True)),
                ('Drug_Name_2', models.CharField(blank=True, max_length=300, null=True)),
                ('Start_Date_of_Medication_2', models.DateField(blank=True, null=True)),
                ('Duration_Month_2', models.IntegerField(blank=True, null=True)),
                ('Drug_Name_3', models.CharField(blank=True, max_length=300, null=True)),
                ('Start_Date_of_Medication_3', models.DateField(blank=True, null=True)),
                ('Duration_Month_3', models.IntegerField(blank=True, null=True)),
                ('Drug_Name_4', models.CharField(blank=True, max_length=300, null=True)),
                ('Start_Date_of_Medication_4', models.DateField(blank=True, null=True)),
                ('Duration_Month_4', models.IntegerField(blank=True, null=True)),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Pregnancy_Test', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(max_length=200, null=True)),
                ('AST_ULN', models.FloatField(max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(null=True)),
                ('WBCx10_3_mm_3', models.FloatField(null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(null=True)),
                ('Hb_G_L', models.IntegerField(null=True)),
                ('INR', models.FloatField(max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(max_length=200, null=True)),
                ('Triglyceride_mg_dl', models.FloatField(blank=True, max_length=200, null=True)),
                ('LDL_mg_dl', models.FloatField(blank=True, max_length=200, null=True)),
                ('HDL_mg_dl', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('ANA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('titre', models.CharField(blank=True, max_length=200, null=True)),
                ('blood_Sample_Storage', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=11, null=True)),
                ('Specify_The_ID_Sample', models.IntegerField(blank=True, null=True)),
                ('HBs_Ag', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('HBV_DBA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('HBV_DNA_Quant', models.IntegerField(blank=True, default=0, null=True)),
                ('ECG', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=200, null=True)),
                ('Spicify_ECG', models.TextField(blank=True, null=True)),
                ('HIV', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('limit_of_detetion_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Echo', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal'), ('Not Done', 'Not Done')], max_length=200, null=True)),
                ('Spicify_Echo', models.TextField(blank=True, null=True)),
                ('Foundus_Exam', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=200, null=True)),
                ('Foundus_exam_specify', models.TextField(blank=True, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200, null=True)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('Fibrosis_Assessment', models.CharField(blank=True, choices=[('Liver Biopsy (Metavir)', 'Liver Biopsy (Metavir)'), ('Fibroscan', 'Fibroscan'), ('Both', 'Both'), ('No Need', 'No Need')], max_length=200, null=True)),
                ('Liver_Biopsy_Date', models.DateField(blank=True, null=True)),
                ('Activity_Grade_A', models.CharField(blank=True, choices=[('A0', 'A0'), ('A1', 'A1'), ('A2', 'A2'), ('A3', 'A3')], max_length=200, null=True)),
                ('Fibrosis_Stage_F', models.CharField(blank=True, choices=[('Liver Biopsy (Metavir)', 'Liver Biopsy (Metavir)'), ('Fibroscan', 'Fibroscan'), ('Both', 'Both'), ('No Need', 'No Need')], max_length=200, null=True)),
                ('Steatosis', models.CharField(blank=True, choices=[('None', 'None'), ('Mild(1-32%)', 'Mild(1-32%)'), ('Moderate(33-66%)', 'Moderate(33-66%)'), ('Severe(>66%)', 'Severe(>66%)')], max_length=200, null=True)),
                ('Fibroscan_date', models.DateField(blank=True, null=True)),
                ('Fibroscan', models.CharField(blank=True, choices=[('F0', 'F0'), ('F0-1', 'F0-1'), ('F1', 'F1'), ('F1-2', 'F1-2'), ('F2', 'F2'), ('F2-3', 'F2-3'), ('F3', 'F3'), ('F3', 'F3'), ('F3-4', 'F3-4'), ('F4', 'F4')], max_length=200, null=True)),
                ('stiffness', models.CharField(blank=True, max_length=200, null=True)),
                ('Previous_Treatment_for_schistosomiasis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Recent Treatment', 'Recent Treatment'), ('Past Treatment', 'Past Treatment')], max_length=200, null=True)),
                ('Serology', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('titre_Sch', models.CharField(blank=True, max_length=200, null=True)),
                ('Fib4_Calculation', models.FloatField(blank=True, max_length=200, null=True)),
                ('Chid_score_Calculation', models.FloatField(blank=True, max_length=200, null=True)),
                ('E_CrCl_Calculation', models.FloatField(blank=True, max_length=200, null=True)),
                ('Varices', models.CharField(blank=True, choices=[('Risky Varices', 'Risky Varices'), ('Not Risky', 'Not Risky'), ('Eradicated', 'Eradicated')], max_length=200, null=True)),
                ('Upper_Endoscopy', models.CharField(blank=True, choices=[('Not pereformed', 'Not pereformed'), ('Free', 'Free'), ('Others', 'Others'), ('Varices', 'Varices')], max_length=200, null=True)),
                ('Others_Endoscopy', models.TextField(blank=True, null=True)),
                ('Code_List', models.CharField(blank=True, choices=[('1) Psychiatric Disorders', '1) Psychiatric Disorders'), ('2) Cardiac Disease', '2) Cardiac Disease'), ('3) Thyroid Abnormalities', '3) Thyroid Abnormalities'), ('4) Post Transplant', '4) Post Transplant'), ('5) Autoimmune disease', '5) Autoimmune disease'), ('6) Proliferative Retinnopathy', '6) Proliferative Retinnopathy'), ('7) Esophageal Varices', '7) Esophageal Varices'), ('8) Anemia', '8) Anemia'), ('9) Thrombocytopenia', '9) Thrombocytopenia'), ('10) Leucopenia', '10) Leucopenia'), ('11) Neutropenia', '11) Neutropenia'), ('12) Extrahepatic', '12) Extrahepatic'), ('13) Others', '13) Others'), ('14) Age >60', '14) Age >60'), ('15) Decompensated cirrhosis', '15) Decompensated cirrhosis'), ('16) Severe Fundus Abnormalities', '16) Severe Fundus Abnormalities'), ('other', 'other')], default='other', max_length=200, null=True)),
                ('Note', models.TextField(blank=True, null=True)),
                ('Contract_Type', models.CharField(blank=True, choices=[('Governmental Support', 'Governmental Support'), ('Health Insurance', 'Health Insurance'), ('Private', 'Private'), ('Cash', 'Cash'), ('Tahia MISR', 'Tahia MISR'), ('Beet EL-Zkah', 'Beet EL-Zkah'), ('مبادرة المسح', 'مبادرة المسح')], max_length=200, null=True)),
                ('Duration', models.CharField(blank=True, choices=[('12 Week', '12 Week'), ('24 Week', '24 Week'), ('No Duration', 'No Duration')], max_length=200, null=True)),
                ('Final_Decision', models.CharField(blank=True, choices=[('SOF/RBV', 'SOF/RBV'), ('INF/SOF/RBV', 'INF/SOF/RBV'), ('SOF/DAC', 'SOF/DAC'), ('SOF/DAC/RBV', 'SOF/DAC/RBV'), ('SIM/SOF', 'SIM/SOF'), ('SOF/SIM/DAC/RBV', 'SOF/SIM/DAC/RBV'), ('SOF/SIM/DAC', 'SOF/SIM/DAC'), ('PAR/OMB', 'PAR/OMB'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('INF/RBV', 'INFRBV'), ('SOF/PAR/OMP', 'SOF/PAR/OMP'), ('PAR/OMB/RBV', 'PAR/OMB/RBV'), ('SOF/PAR/OMB/RBV', 'SOF/PAR/OMB/RBV'), ('SOF/VEL', 'SOF/VEL'), ('SOF/VEL/RBV', 'SOF/VEL/RBV'), ('SOF/VEL/VOX', 'SOF/VEL/VOX'), ('SOF/VEL/VOX/RBV', 'SOF/VEL/VOX/RBV'), ('SOF/LED/RBV', 'SOF/LED/RBV'), ('Wait', 'Wait'), ('Exclude', 'Exclude'), ('No Treatment', 'No Treatment')], max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('Center_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='W8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w8s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField(null=True)),
                ('PhysicianName', models.CharField(max_length=200, null=True)),
                ('date', models.DateField(null=True)),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200, null=True)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('HCV_RNA_W4', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w4s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W36',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('HCV_RNA_W36', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_W36', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_Value_36', models.IntegerField(blank=True, null=True)),
                ('CD4_count_W36', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w36s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W28',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w28s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W24',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('HCV_RNA_W24', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_W24', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_Value_24', models.IntegerField(blank=True, null=True)),
                ('CD4_count_W24', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w24s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W20',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w20s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W16',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w16s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField()),
                ('PhysicianName', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200)),
                ('Presence_Of_focal_Lesions', models.CharField(choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('HCV_RNA_W12', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_W12', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive'), ('NOT DONE', 'NOT DONE')], max_length=100)),
                ('HIV_PCR_Value_12', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w12s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='W0',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FollowUp_date', models.DateField(blank=True, null=True)),
                ('PhysicianName', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateField(null=True)),
                ('HCV_RNA', models.CharField(blank=True, choices=[('Negative', 'Negative'), ('Positive', 'Positive')], max_length=200, null=True)),
                ('Quant', models.IntegerField(blank=True, null=True)),
                ('Limit_OF_Det_IU_ml', models.IntegerField(blank=True, null=True)),
                ('Weight_Kgm', models.IntegerField(blank=True, null=True)),
                ('BP_mmHg', models.TextField(blank=True, max_length=200, null=True)),
                ('ALT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALT_Result', models.CharField(blank=True, max_length=200, null=True)),
                ('AST_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AST_Result', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('ALP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('AFP_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Total_BILIRUBIN_mg_d', models.FloatField(blank=True, null=True)),
                ('Indirect_Bilirubin_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_IU_L', models.FloatField(blank=True, max_length=200, null=True)),
                ('GGT_ULN', models.FloatField(blank=True, max_length=200, null=True)),
                ('Plateletsx10_3', models.IntegerField(blank=True, null=True)),
                ('WBCx10_3_mm_3', models.FloatField(blank=True, null=True)),
                ('ANCx10_3_mm_3', models.FloatField(blank=True, max_length=200, null=True)),
                ('Albumin_g_dL', models.FloatField(blank=True, null=True)),
                ('Hb_G_L', models.IntegerField(blank=True, null=True)),
                ('INR', models.FloatField(blank=True, max_length=200, null=True)),
                ('Creatine_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('Glucose_mg_dL', models.FloatField(blank=True, max_length=200, null=True)),
                ('TSH', models.FloatField(blank=True, max_length=200, null=True)),
                ('PC', models.FloatField(blank=True, max_length=200, null=True)),
                ('HbA1c', models.FloatField(blank=True, max_length=200, null=True)),
                ('Date_Ultrasound', models.DateField(blank=True, null=True, verbose_name='date Ultasound')),
                ('Liver', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Abnormal Echopattern', 'Abnormal Echopattern'), ('Cirrhotic', 'Cirrhotic')], max_length=200, null=True)),
                ('PV', models.CharField(blank=True, choices=[('Patent', 'Patent'), ('Thrombosed', 'Thrombosed')], max_length=200, null=True)),
                ('PV_Dimeter_mm', models.FloatField(blank=True, max_length=200, null=True)),
                ('Other_ultrasound', models.CharField(blank=True, max_length=200, null=True)),
                ('Ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('Ascites_IF_YES', models.CharField(blank=True, choices=[('Mild-Moderate', 'Mild-Moderate'), ('Tense', 'Tense'), ('mild-moderate', 'mild-moderate')], max_length=200, null=True)),
                ('Presence_Of_focal_Lesions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('If_Presence_Of_focal_Lesions_yes_number', models.CharField(blank=True, max_length=200, null=True)),
                ('Diameter_Of_Largest_cm', models.FloatField(blank=True, max_length=200, null=True)),
                ('sonographic_Appearance_Malignant', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Suspicious', 'Suspicious')], max_length=200, null=True)),
                ('Other_Comment_Ultrasound', models.TextField(blank=True, null=True)),
                ('Ribavirine_dose', models.FloatField(blank=True, max_length=200, null=True)),
                ('INF_Dose', models.FloatField(blank=True, max_length=200, null=True)),
                ('SOF_Dose', models.FloatField(blank=True, max_length=200, null=True)),
                ('SIM_Dose', models.FloatField(blank=True, max_length=200, null=True)),
                ('LED', models.FloatField(blank=True, max_length=200, null=True)),
                ('DAC', models.FloatField(blank=True, max_length=200, null=True)),
                ('PAR_OMB', models.FloatField(blank=True, max_length=200, null=True)),
                ('additional', models.CharField(blank=True, max_length=200, null=True)),
                ('Other', models.TextField(blank=True, max_length=200, null=True)),
                ('presence_of_Side_Effects', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('NO', 'NO')], max_length=200, null=True)),
                ('If_Presence_Of_side_effect_yes', models.CharField(blank=True, choices=[('Amnesia', 'Amnesia'), ('Pseudo-flu syndrome', 'Pseudo-flu syndrome'), ('Hair loss', 'Hair loss'), ('Respiratory Disorder', 'Respiratory Disorder'), ('Psychological Disorders', 'Psychological Disorders'), ('RASH', 'RASH'), ('GI symptoms', 'GI symptoms'), ('Anemia', 'Anemia'), ('jaundice', 'jaundice'), ('Ascites', 'Ascites'), ('Encephalopathy', 'Encephalopathy'), ('Hematemesis', 'Hematemesis'), ('Others', 'Others')], max_length=200, null=True)),
                ('spicify_side_Effects', models.CharField(blank=True, max_length=600, null=True)),
                ('Decision_To', models.CharField(blank=True, choices=[('Continue with the same Treatment', 'Continue with the same Treatment'), ('Stop Treatment', 'Stop Treatment'), ('Change Dose', 'Change Dose')], max_length=200, null=True)),
                ('New_Ribavirin_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('New_INF_Dose', models.FloatField(blank=True, max_length=4, null=True)),
                ('additional_sideEffect', models.CharField(blank=True, max_length=100, null=True)),
                ('Stop_Treatment_Options', models.CharField(blank=True, choices=[('Serious Adverse event', 'Serious Adverse event'), ('Too Many adverse events', 'Too Many adverse events'), ('Died', 'Died'), ('Others', 'Others')], max_length=200, null=True)),
                ('Spicify_Stop_Treatment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w0s', to='nntc.Patient', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberofPatient', models.IntegerField(null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='phy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Phythion_Name', models.CharField(blank=True, max_length=20, null=True)),
                ('Phythion_Center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='phyName',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nntc.phy'),
        ),
    ]
